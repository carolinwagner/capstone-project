/// <reference types="cypress" />

context('QuestionForm', () => {
  beforeEach(() => {
    cy.visit('/')
  })

  it('has the right App title', () => {
    cy.title().should('include', 'hello')
  })

  it('has a headline', () => {
    cy.get('h1').should('have.length', 1)
  })

  it('has a button', () => {
    cy.get('button').contains('Satzungstext anzeigen')
  })

  it('has more than 20 questions', () => {
    cy.get('h2').should('have.length.gt', 20)
  })

  it('has some inputs', () => {
    cy.get('input').should('have.length.gt', 20)
  })

  it('shows all answers in the generated bylaws text', () => {
    cy.get('label')
      .contains('Name des Vereins')
      .siblings('input')
      .type('Carolin')

    cy.get('label').contains('Stadt').siblings('input').type('Hamburg')

    cy.get('label').contains('Zweck').siblings('input').type('testen')

    cy.get('label')
      .contains('Wer soll Mitglied')
      .closest('div')
      .find('label')
      .contains('Personengesellschaften')
      .click()

    cy.get('label')
      .contains('Mitgliedsantrag')
      .closest('div')
      .find('label')
      .contains('schriftlich')
      .click()
      .parent()
      .parent()
    cy.get('label').contains('per E-Mail').click()

    cy.get('label')
      .contains('Aufnahmegebühr')
      .closest('div')
      .find('label')
      .contains('ja')
      .click()

    cy.get('label')
      .contains('Mitgliedsbeitrag')
      .closest('div')
      .find('label')
      .contains('ja')
      .click()

    cy.get('label')
      .contains('Belange soll die Mitgliedsversammlung')
      .closest('div')
      .find('label')
      .contains('Entlastung')
      .click()
      .parent()
      .parent()
    cy.get('label').contains('Haushaltsplan').click()

    cy.get('label')
      .contains('Einladung zur Mitgliederversammlung')
      .closest('div')
      .find('label')
      .contains('per E-Mail')
      .click()

    cy.get('label')
      .contains('Tage vorher soll zur Mitgliederversammlung geladen')
      .siblings('input')
      .type('21')

    cy.get('label')
      .contains('Mitgliederversammlung beschlussfähig')
      .closest('div')
      .find('label')
      .contains('ordnungsgemäß einberufene Mitgliederversammlung')
      .click()

    cy.get('label')
      .contains('häufig soll eine Mitgliederversammlung')
      .closest('div')
      .find('label')
      .contains('monatlich')
      .click()

    cy.get('label')
      .contains('Mehrheit soll die Mitgliederversammlung ihre Beschlüsse')
      .closest('div')
      .find('label')
      .contains('einfache')
      .click()

    cy.get('label')
      .contains('Vorstand zusammengesetzt')
      .closest('div')
      .find('label')
      .contains('zwei Vorsitzende')
      .click()
      .parent()
      .parent()
      .get('label')
      .contains('Schatzmeister')
      .click()

    cy.get('label')
      .contains('Verein nach außen vertreten')
      .closest('div')
      .find('label')
      .contains('Mehrheit des Vorstandes')
      .click()

    cy.get('label')
      .contains('Zeitraum soll der Vorstand gewählt werden')
      .closest('div')
      .find('label')
      .contains('drei')
      .click()

    cy.get('label')
      .contains('Wiederwahl des Vorstandes')
      .closest('div')
      .find('label')
      .contains('ja')
      .click()

    cy.get('label')
      .contains('zur Vorstandssitzung geladen')
      .closest('div')
      .find('label')
      .contains('schriftlich')
      .click()

    cy.get('label')
      .contains('Tage vorher soll zu einer Vorstandssitzung geladen')
      .siblings('input')
      .type('30')

    cy.get('label')
      .contains('Mitteilung einer Tagesordnung')
      .closest('div')
      .find('label')
      .contains('ja')
      .click()

    cy.get('label')
      .contains('Arbeitsausschüsse')
      .closest('div')
      .find('label')
      .contains('ja')
      .click()

    cy.get('label')
      .contains(
        'Mitgliederversammlung über die Auflösung des Vereins entscheiden'
      )
      .closest('div')
      .find('label')
      .contains('absolute')
      .click()

    cy.get('label')
      .contains('Tag soll über die Satzung beschlossen')
      .siblings('input')
      .type('2020-12-31')

    cy.get('label')
      .contains('Satzung unterschreiben')
      .siblings('input')
      .type('10')

    cy.get('button').click()

    cy.get('#nameAndLocation').contains('Carolin')
    cy.get('#businessYear').contains('Kalenderjahr')
    cy.get('#clubPurpose').contains('testen')
    cy.get('#nonProfit').contains('selbstlos')
    cy.get('#useOfFunds').contains('keine Zuwendungen')
    cy.get('#members')
      .contains('Personengesellschaften')
      .contains('schriftlich')
    cy.get('#admissionFee').contains('Aufnahmegebühr')
    cy.get('#memberFee').contains('Beiträge erhoben')
    cy.get('#admissionFee').contains('Aufnahmegebühr')
    cy.get('#memberMeeting')
      .contains('Entlastung des Vorstandes und den Haushaltsplan')
      .contains('per E-Mail')
      .contains('21')
      .contains('Jede ordnungsgemäß einberufene Mitgliederversammlung')
      .contains('monatlich')
      .contains('mit einer einfachen Mehrheit')
    cy.get('#boardComposition')
      .contains('zwei Vorsitzenden und dem Schatzmeister')
      .contains('drei Jahren')
      .contains('Wiederwahl ist möglich')
    cy.get('#clubRepresentation').contains('Mehrheit des Vorstandes')
    cy.get('#clubRepresentation').contains('Mehrheit des Vorstandes')
    cy.get('#boardMeeting').contains('30 Tage')
    cy.get('#committees').contains('in Arbeitsausschüsse berufen')
    cy.get('#dissolutionMajority').contains(
      'mit einer absoluten Mehrheit der anwesenden'
    )
    cy.get('#location').contains('Hamburg')
    cy.get('#date').contains('2020-12-31')
  })

  it('shows error messages if no input is set', () => {
    cy.get('button')
      .click()
      .get('[data-cy=errorMessage]')
      .should('have.length', 24)
  })

  it('check browser number validation message on invalid input', () => {
    cy.get('[type="number"]').first().type('-2')
    cy.get('button').contains('Satzungstext anzeigen').click()
    cy.get('input:invalid').should('have.length', 1)
  })

  it('check browser date validation message on invalid input', () => {
    cy.get('[type="date"]').first().type('2010-12-31')
    cy.get('button').click()
    cy.get('input:invalid').should('have.length', 1)
  })
})
